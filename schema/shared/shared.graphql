scalar Time

type Restaurant {
  id: ID!
  restaurantName: String!
  about: String!
  telephone: String!
  verified: Boolean!
  distance: Float
  createdAt: Time
  updatedAt: Time
  addresses: [Address!]
  license: File!
  menu: [Menu!]!
  orders: [Order!]!
  payments: [Payment!]!
  displayPics: [File!]!
}

type Address {
  postalCode: String!
  postalTown: String!
  streetName: String!
  city: String!
  lon: Float!
  lat: Float!
  addressString: String!
  createdAt: Time
  updatedAt: Time
  restaurants: [Restaurant!]!
}

type File {
  id: ID!
  media: String!
  content: String!
  size: Int!
  createdAt: Time
  updatedAt: Time
}

# DishAddOn
type DishAddOn {
  id: ID!
  name: String!
  price: Float!
}

# Dish Type
type Dish {
  id: ID!
  title: String!
  description: String!
  price: Float!
  image: String
  dishAddOn: [DishAddOn!]!
}

type Menu {
  id: ID!
  headline: String!
  dishes: [Dish!]!
}

type DishOrder {
  id: ID!
  title: String!
  description: String!
  count: Int!
  price: Float!
  subtotal: Float!
}

type Order {
  id: ID!
  notes: [DishOrder!]!
  restaurantNotes: String!
  totalSum: Float!
  phoneNumber: String!
  orderStatus: String!
  payment: Payment!
}

type Payment {
  id: ID!
  merchantRequestId: String!
  checkoutRequestId: String!
  mpesaDescription: String!
  paidAmount: Float!
  phoneNumber: String!
  confirmed: Boolean!
}

type Rider {
  id: ID!
  firstname: String!
  lastname: String!
  email_address: String!
  verified: Boolean!
  displayPic: File!
  phoneNumber: String!
  deliveryMeans: String!
  IdentificationDocument: File!
  MedicalCertificate: File!
  GoodConductCertificate: File!
}
